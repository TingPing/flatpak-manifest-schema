{
  "title": "Flatpak Builder Manifest",
  "definitions": {
    "build-options": {
      "type": "object",
      "properties": {
        "cflags": {
          "type": "string",
          "description": "This is set in the environment variable CFLAGS during the build. Multiple specifications of this (in e.g. per-arch area) are concatenated, separated by spaces."
        },
        "cflags-override": {
          "type": "boolean",
          "description": "If this is true, clear cflags from previous build options before adding it from these options."
        },
        "cppflags": {
          "type": "string",
          "description": "This is set in the environment variable CPPFLAGS during the build. Multiple specifications of this (in e.g. per-arch area) are concatenated, separated by spaces."
        },
        "cppflags-override": {
          "type": "boolean",
          "description": "If this is true, clear cppflags from previous build options before adding it from these options."
        },
        "cxxflags": {
          "type": "string",
          "description": "This is set in the environment variable CXXFLAGS during the build. Multiple specifications of this (in e.g. per-arch area) are concatenated, separated by spaces."
        },
        "cxxflags-override": {
          "type": "boolean",
          "description": "If this is true, clear cxxflags from previous build options before adding it from these options."
        },
        "ldflags": {
          "type": "string",
          "description": "This is set in the environment variable LDFLAGS during the build. Multiple specifications of this (in e.g. per-arch area) are concatenated, separated by spaces."
        },
        "ldflags-override": {
          "type": "boolean",
          "description": "If this is true, clear ldflags from previous build options before adding it from these options."
        },
        "prefix": {
          "type": "string",
          "description": "filename"
        },
        "libdir": {
          "type": "string",
          "description": "filename"
        },
        "append-path": {
          "type": "string",
          "description": "This will get appended to PATH in the build environment (with an leading colon if needed)."
        },
        "prepend-path": {
          "type": "string",
          "description": "This will get prepended to PATH in the build environment (with an trailing colon if needed)."
        },
        "append-ld-library-path": {
          "type": "string",
          "description": "This will get appended to LD_LIBRARY_PATH in the build environment (with an leading colon if needed)."
        },
        "prepend-ld-library-path": {
          "type": "string",
          "description": "This will get prepended to LD_LIBRARY_PATH in the build environment (with an trailing colon if needed)."
        },
        "append-pkg-config-path": {
          "type": "string",
          "description": "This will get appended to PKG_CONFIG_PATH in the build environment (with an leading colon if needed)."
        },
        "prepend-pkg-config-path": {
          "type": "string",
          "description": "This will get prepended to PKG_CONFIG_PATH in the build environment (with an trailing colon if needed)."
        },
        "env": {
          "type": "object",
          "patternProperties": {
            ".+": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "description": "This is a dictionary defining environment variables to be set during the build. Elements in this override the properties that set the environment, like cflags and ldflags. Keys with a null value unset the corresponding variable."
        },
        "build-args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "This is an array containing extra options to pass to flatpak build."
        },
        "test-args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Similar to build-args but affects the tests, not the normal build."
        },
        "config-opts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "This is an array containing extra options to pass to configure."
        },
        "make-args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of extra arguments that will be passed to make"
        },
        "make-install-args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of extra arguments that will be passed to make install"
        },
        "strip": {
          "type": "boolean",
          "description": "If this is true (the default is false) then all ELF files will be stripped after install."
        },
        "no-debuginfo": {
          "type": "boolean",
          "description": "By default (if strip is not true) flatpak-builder extracts all debug info in ELF files to a separate files and puts this in an extension. If you want to disable this, set no-debuginfo to true."
        },
        "no-debuginfo-compression": {
          "type": "boolean",
          "description": "By default when extracting debuginfo we compress the debug sections. If you want to disable this, set no-debuginfo-compression to true."
        },
        "arch": {
          "type": "object",
          "patternProperties": {
            "^(x86_64|i386|arm|aarch64)$": {
              "$ref": "#/definitions/build-options"
            }
          },
          "additionalProperties": false,
          "description": "This is a dictionary defining for each arch a separate build options object that override the main one."
        }
      }
    },
    "extension": {
      "type": "object",
      "properties": {
        "directory": {
          "type": "string",
          "description": "The directory where the extension is mounted. If the extension point is for an application, this path is relative to /app, otherwise it is relative to /usr."
        },
        "autodelete": {
          "type": "boolean",
          "description": "Whether to automatically delete extensions matching this extension point when deleting a 'related' application or runtime."
        },
        "no-autodownload": {
          "type": "boolean",
          "description": "Whether to automatically download extensions matching this extension point when updating or installing a 'related' application or runtime."
        },
        "subdirectories": {
          "type": "boolean",
          "description": "If this key is set to true, then flatpak will look for extensions whose name is a prefix of the extension point name, and mount them at the corresponding name below the subdirectory."
        },
        "add-ld-path": {
          "type": "string",
          "description": "A path relative to the extension point directory that will be appended to LD_LIBRARY_PATH."
        },
        "download-if": {
          "type": "string",
          "anyOf": [
            {
              "enum": [
                "active-gl-driver",
                "active-gtk-theme",
                "have-intel-gpu"
              ]
            },
            {
              "pattern": "on-xdg-desktop-.+"
            }
          ],
          "description": "A condition that must be true for the extension to be auto-downloaded."
        },
        "enable-if": {
          "$ref": "#/definitions/extension/properties/download-if",
          "description": "A condition that must be true for the extension to be enabled."
        },
        "merge-dirs": {
          "type": "string",
          "description": "A list of relative paths of directories below the extension point directory that will be merged."
        },
        "subdirectory-suffix": {
          "type": "string",
          "description": "A suffix that gets appended to the directory name. This is very useful when the extension point naming scheme is \"reversed\". For example, an extension point for GTK+ themes would be /usr/share/themes/$NAME/gtk-3.0, which could be achieved using subdirectory-suffix=gtk-3.0."
        },
        "locale-subset": {
          "type": "boolean",
          "description": "If set, then the extensions are partially downloaded by default, based on the currently configured locales. This means that the extension contents should be a set of directories with the language code as name."
        },
        "version": {
          "type": "string",
          "description": "The branch to use when looking for the extension. If this is not specified, it defaults to the branch of the application or runtime that the extension point is for."
        },
        "versions": {
          "type": "string",
          "description": "The branches to use when looking for the extension. If this is not specified, it defaults to the branch of the application or runtime that the extension point is for."
        },
        "bundle": {
          "type": "boolean",
          "description": "If this is true, then the data created in the extension directory is omitted from the result, and instead packaged in a separate extension."
        },
        "remove-after-build": {
          "type": "boolean",
          "description": "If this is true, the extension is removed during when finishing. This is only interesting for extensions in the add-build-extensions property."
        }
      }
    },
    "module": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the module, used in e.g. build logs. The name is also used for constructing filenames and commandline arguments, therefore using spaces or '/' in this string is a bad idea."
        },
        "disabled": {
          "type": "boolean",
          "description": "If true, skip this module"
        },
        "sources": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/archive-source"
              },
              {
                "$ref": "#/definitions/git-source"
              },
              {
                "$ref": "#/definitions/bzr-source"
              },
              {
                "$ref": "#/definitions/svn-source"
              },
              {
                "$ref": "#/definitions/file-source"
              },
              {
                "$ref": "#/definitions/directory-source"
              },
              {
                "$ref": "#/definitions/script-source"
              },
              {
                "$ref": "#/definitions/shell-source"
              },
              {
                "$ref": "#/definitions/patch-source"
              },
              {
                "$ref": "#/definitions/extra-data-source"
              }
            ]
          },
          "description": "An array of objects defining sources that will be downloaded and extracted in order. String members in the array are interpreted as the name of a separate json or yaml file that contains sources. See below for details."
        },
        "config-opts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of options that will be passed to configure"
        },
        "make-args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of arguments that will be passed to make"
        },
        "make-install-args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of arguments that will be passed to make install"
        },
        "rm-configure": {
          "type": "boolean",
          "description": "If true, remove the configure script before starting build"
        },
        "no-autogen": {
          "type": "boolean",
          "description": "Ignore the existence of an autogen script"
        },
        "no-parallel-make": {
          "type": "boolean",
          "description": "Don't call make with arguments to build in parallel"
        },
        "install-rule": {
          "type": "string",
          "description": "Name of the rule passed to make for the install phase, default is install"
        },
        "no-make-install": {
          "type": "boolean",
          "description": "Don't run the make install (or equivalent) stage"
        },
        "no-python-timestamp-fix": {
          "type": "boolean",
          "description": "Don't fix up the *.py[oc] header timestamps for ostree use."
        },
        "cmake": {
          "type": "boolean",
          "description": "Use cmake instead of configure (deprecated: use buildsystem instead)"
        },
        "buildsystem": {
          "type": "string",
          "enum": [
            "autotools",
            "cmake",
            "cmake-ninja",
            "meson",
            "simple",
            "qmake"
          ],
          "default": "autotools",
          "description": "Build system to use: autotools, cmake, cmake-ninja, meson, simple, qmake"
        },
        "builddir": {
          "type": "boolean",
          "description": "Use a build directory that is separate from the source directory"
        },
        "subdir": {
          "type": "string",
          "description": "Build inside this subdirectory of the extracted sources"
        },
        "build-options": {
          "$ref": "#/definitions/build-options",
          "description": "A build options object that can override global options"
        },
        "build-commands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "literal"
        },
        "post-install": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of shell commands that are run after the install phase. Can for example clean up the install dir, or install extra files."
        },
        "cleanup": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of file patterns that should be removed at the end. Patterns starting with / are taken to be full pathnames (without the /app prefix), otherwise they just match the basename. Note that any patterns will only match files installed by this module."
        },
        "ensure-writable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The way the builder works is that files in the install directory are hard-links to the cached files, so you're not allowed to modify them in-place. If you list a file in this then the hardlink will be broken and you can modify it. This is a workaround, ideally installing files should replace files, not modify existing ones."
        },
        "only-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If non-empty, only build the module on the arches listed."
        },
        "skip-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Don't build on any of the arches listed."
        },
        "cleanup-platform": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Extra files to clean up in the platform."
        },
        "run-tests": {
          "type": "boolean",
          "description": "If true this will run the tests after installing."
        },
        "test-rule": {
          "type": "string",
          "description": "The target to build when running the tests. Defaults to \"check\" for make and \"test\" for ninja. Set to empty to disable."
        },
        "test-commands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of commands to run during the tests."
        },
        "modules": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/module"
              }
            ]
          },
          "description": "An array of objects specifying nested modules to be built before this one. String members in the array are interpreted as names of a separate json or yaml file that contains a module."
        }
      }
    },
    "archive-source": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "only-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If non-empty, only build the module on the arches listed."
        },
        "skip-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Don't build on any of the arches listed."
        },
        "dest": {
          "type": "string",
          "description": "Directory inside the source dir where this source will be extracted."
        },
        "type": {
          "type": "string",
          "enum": [
            "archive",
            "git",
            "bzr",
            "svn",
            "dir",
            "file",
            "script",
            "shell",
            "patch",
            "extra-data"
          ],
          "description": "\"extra-data\""
        },
        "path": {
          "type": "string",
          "description": "The path of a patch file that will be applied in the source dir"
        },
        "url": {
          "type": "string",
          "description": "The url to the extra data."
        },
        "mirror-urls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of alternative urls that are used if the main url fails."
        },
        "git-init": {
          "type": "boolean",
          "description": "Whether to initialise the repository as a git repository."
        },
        "md5": {
          "type": "string",
          "description": "The md5 checksum of the file, verified after download. This is optional for local files. Note that md5 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha1": {
          "type": "string",
          "description": "The sha1 checksum of the file, verified after download. This is optional for local files. Note that sha1 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha256": {
          "type": "string",
          "description": "The sha256 of the extra data."
        },
        "sha512": {
          "type": "string",
          "description": "The sha512 checksum of the file, verified after download. This is optional for local files."
        },
        "strip-components": {
          "type": "integer",
          "description": "The value of the -p argument to patch, defaults to 1."
        },
        "dest-filename": {
          "type": "string",
          "description": "Filename to use inside the source dir, default to autogen.sh."
        },
        "branch": {
          "type": "string",
          "description": "The branch to use from the git repository"
        },
        "tag": {
          "type": "string",
          "description": "The tag to use from the git repository"
        },
        "commit": {
          "type": "string",
          "description": "The commit to use from the git repository. If branch is also specified, then it is verified that the branch/tag is at this specific commit. This is a readable way to document that you're using a particular tag, but verify that it does not change."
        },
        "disable-fsckobjects": {
          "type": "boolean",
          "description": "Don't use transfer.fsckObjects=1 to mirror git repository. This may be needed for some (broken) repositories."
        },
        "disable-shallow-clone": {
          "type": "boolean",
          "description": "Don't optimize by making a shallow clone when downloading the git repo."
        },
        "revision": {
          "type": "string",
          "description": "A specific revision number to use"
        },
        "skip": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Source files to ignore in the directory."
        },
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of shell commands that will be run during source extraction"
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An list of paths to a patch files that will be applied in the source dir, in order"
        },
        "use-git": {
          "type": "boolean",
          "description": "Whether to use \"git apply\" rather than \"patch\" to apply the patch, required when the patch file contains binary diffs."
        },
        "use-git-am": {
          "type": "boolean",
          "description": "option"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Extra options to pass to the patch command."
        },
        "filename": {
          "type": "string",
          "description": "The name to use for the downloaded extra data"
        },
        "size": {
          "type": "number",
          "description": "The size of the extra data."
        },
        "installed-size": {
          "type": "string",
          "description": "The extra installed size this adds to the app (optional)."
        }
      }
    },
    "git-source": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "only-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If non-empty, only build the module on the arches listed."
        },
        "skip-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Don't build on any of the arches listed."
        },
        "dest": {
          "type": "string",
          "description": "Directory inside the source dir where this source will be extracted."
        },
        "type": {
          "type": "string",
          "enum": [
            "archive",
            "git",
            "bzr",
            "svn",
            "dir",
            "file",
            "script",
            "shell",
            "patch",
            "extra-data"
          ],
          "description": "\"extra-data\""
        },
        "path": {
          "type": "string",
          "description": "The path of a patch file that will be applied in the source dir"
        },
        "url": {
          "type": "string",
          "description": "The url to the extra data."
        },
        "mirror-urls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of alternative urls that are used if the main url fails."
        },
        "git-init": {
          "type": "boolean",
          "description": "Whether to initialise the repository as a git repository."
        },
        "md5": {
          "type": "string",
          "description": "The md5 checksum of the file, verified after download. This is optional for local files. Note that md5 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha1": {
          "type": "string",
          "description": "The sha1 checksum of the file, verified after download. This is optional for local files. Note that sha1 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha256": {
          "type": "string",
          "description": "The sha256 of the extra data."
        },
        "sha512": {
          "type": "string",
          "description": "The sha512 checksum of the file, verified after download. This is optional for local files."
        },
        "strip-components": {
          "type": "integer",
          "description": "The value of the -p argument to patch, defaults to 1."
        },
        "dest-filename": {
          "type": "string",
          "description": "Filename to use inside the source dir, default to autogen.sh."
        },
        "branch": {
          "type": "string",
          "description": "The branch to use from the git repository"
        },
        "tag": {
          "type": "string",
          "description": "The tag to use from the git repository"
        },
        "commit": {
          "type": "string",
          "description": "The commit to use from the git repository. If branch is also specified, then it is verified that the branch/tag is at this specific commit. This is a readable way to document that you're using a particular tag, but verify that it does not change."
        },
        "disable-fsckobjects": {
          "type": "boolean",
          "description": "Don't use transfer.fsckObjects=1 to mirror git repository. This may be needed for some (broken) repositories."
        },
        "disable-shallow-clone": {
          "type": "boolean",
          "description": "Don't optimize by making a shallow clone when downloading the git repo."
        },
        "revision": {
          "type": "string",
          "description": "A specific revision number to use"
        },
        "skip": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Source files to ignore in the directory."
        },
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of shell commands that will be run during source extraction"
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An list of paths to a patch files that will be applied in the source dir, in order"
        },
        "use-git": {
          "type": "boolean",
          "description": "Whether to use \"git apply\" rather than \"patch\" to apply the patch, required when the patch file contains binary diffs."
        },
        "use-git-am": {
          "type": "boolean",
          "description": "option"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Extra options to pass to the patch command."
        },
        "filename": {
          "type": "string",
          "description": "The name to use for the downloaded extra data"
        },
        "size": {
          "type": "number",
          "description": "The size of the extra data."
        },
        "installed-size": {
          "type": "string",
          "description": "The extra installed size this adds to the app (optional)."
        }
      }
    },
    "bzr-source": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "only-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If non-empty, only build the module on the arches listed."
        },
        "skip-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Don't build on any of the arches listed."
        },
        "dest": {
          "type": "string",
          "description": "Directory inside the source dir where this source will be extracted."
        },
        "type": {
          "type": "string",
          "enum": [
            "archive",
            "git",
            "bzr",
            "svn",
            "dir",
            "file",
            "script",
            "shell",
            "patch",
            "extra-data"
          ],
          "description": "\"extra-data\""
        },
        "path": {
          "type": "string",
          "description": "The path of a patch file that will be applied in the source dir"
        },
        "url": {
          "type": "string",
          "description": "The url to the extra data."
        },
        "mirror-urls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of alternative urls that are used if the main url fails."
        },
        "git-init": {
          "type": "boolean",
          "description": "Whether to initialise the repository as a git repository."
        },
        "md5": {
          "type": "string",
          "description": "The md5 checksum of the file, verified after download. This is optional for local files. Note that md5 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha1": {
          "type": "string",
          "description": "The sha1 checksum of the file, verified after download. This is optional for local files. Note that sha1 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha256": {
          "type": "string",
          "description": "The sha256 of the extra data."
        },
        "sha512": {
          "type": "string",
          "description": "The sha512 checksum of the file, verified after download. This is optional for local files."
        },
        "strip-components": {
          "type": "integer",
          "description": "The value of the -p argument to patch, defaults to 1."
        },
        "dest-filename": {
          "type": "string",
          "description": "Filename to use inside the source dir, default to autogen.sh."
        },
        "branch": {
          "type": "string",
          "description": "The branch to use from the git repository"
        },
        "tag": {
          "type": "string",
          "description": "The tag to use from the git repository"
        },
        "commit": {
          "type": "string",
          "description": "The commit to use from the git repository. If branch is also specified, then it is verified that the branch/tag is at this specific commit. This is a readable way to document that you're using a particular tag, but verify that it does not change."
        },
        "disable-fsckobjects": {
          "type": "boolean",
          "description": "Don't use transfer.fsckObjects=1 to mirror git repository. This may be needed for some (broken) repositories."
        },
        "disable-shallow-clone": {
          "type": "boolean",
          "description": "Don't optimize by making a shallow clone when downloading the git repo."
        },
        "revision": {
          "type": "string",
          "description": "A specific revision number to use"
        },
        "skip": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Source files to ignore in the directory."
        },
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of shell commands that will be run during source extraction"
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An list of paths to a patch files that will be applied in the source dir, in order"
        },
        "use-git": {
          "type": "boolean",
          "description": "Whether to use \"git apply\" rather than \"patch\" to apply the patch, required when the patch file contains binary diffs."
        },
        "use-git-am": {
          "type": "boolean",
          "description": "option"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Extra options to pass to the patch command."
        },
        "filename": {
          "type": "string",
          "description": "The name to use for the downloaded extra data"
        },
        "size": {
          "type": "number",
          "description": "The size of the extra data."
        },
        "installed-size": {
          "type": "string",
          "description": "The extra installed size this adds to the app (optional)."
        }
      }
    },
    "svn-source": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "only-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If non-empty, only build the module on the arches listed."
        },
        "skip-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Don't build on any of the arches listed."
        },
        "dest": {
          "type": "string",
          "description": "Directory inside the source dir where this source will be extracted."
        },
        "type": {
          "type": "string",
          "enum": [
            "archive",
            "git",
            "bzr",
            "svn",
            "dir",
            "file",
            "script",
            "shell",
            "patch",
            "extra-data"
          ],
          "description": "\"extra-data\""
        },
        "path": {
          "type": "string",
          "description": "The path of a patch file that will be applied in the source dir"
        },
        "url": {
          "type": "string",
          "description": "The url to the extra data."
        },
        "mirror-urls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of alternative urls that are used if the main url fails."
        },
        "git-init": {
          "type": "boolean",
          "description": "Whether to initialise the repository as a git repository."
        },
        "md5": {
          "type": "string",
          "description": "The md5 checksum of the file, verified after download. This is optional for local files. Note that md5 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha1": {
          "type": "string",
          "description": "The sha1 checksum of the file, verified after download. This is optional for local files. Note that sha1 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha256": {
          "type": "string",
          "description": "The sha256 of the extra data."
        },
        "sha512": {
          "type": "string",
          "description": "The sha512 checksum of the file, verified after download. This is optional for local files."
        },
        "strip-components": {
          "type": "integer",
          "description": "The value of the -p argument to patch, defaults to 1."
        },
        "dest-filename": {
          "type": "string",
          "description": "Filename to use inside the source dir, default to autogen.sh."
        },
        "branch": {
          "type": "string",
          "description": "The branch to use from the git repository"
        },
        "tag": {
          "type": "string",
          "description": "The tag to use from the git repository"
        },
        "commit": {
          "type": "string",
          "description": "The commit to use from the git repository. If branch is also specified, then it is verified that the branch/tag is at this specific commit. This is a readable way to document that you're using a particular tag, but verify that it does not change."
        },
        "disable-fsckobjects": {
          "type": "boolean",
          "description": "Don't use transfer.fsckObjects=1 to mirror git repository. This may be needed for some (broken) repositories."
        },
        "disable-shallow-clone": {
          "type": "boolean",
          "description": "Don't optimize by making a shallow clone when downloading the git repo."
        },
        "revision": {
          "type": "string",
          "description": "A specific revision number to use"
        },
        "skip": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Source files to ignore in the directory."
        },
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of shell commands that will be run during source extraction"
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An list of paths to a patch files that will be applied in the source dir, in order"
        },
        "use-git": {
          "type": "boolean",
          "description": "Whether to use \"git apply\" rather than \"patch\" to apply the patch, required when the patch file contains binary diffs."
        },
        "use-git-am": {
          "type": "boolean",
          "description": "option"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Extra options to pass to the patch command."
        },
        "filename": {
          "type": "string",
          "description": "The name to use for the downloaded extra data"
        },
        "size": {
          "type": "number",
          "description": "The size of the extra data."
        },
        "installed-size": {
          "type": "string",
          "description": "The extra installed size this adds to the app (optional)."
        }
      }
    },
    "directory-source": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "only-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If non-empty, only build the module on the arches listed."
        },
        "skip-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Don't build on any of the arches listed."
        },
        "dest": {
          "type": "string",
          "description": "Directory inside the source dir where this source will be extracted."
        },
        "type": {
          "type": "string",
          "enum": [
            "archive",
            "git",
            "bzr",
            "svn",
            "dir",
            "file",
            "script",
            "shell",
            "patch",
            "extra-data"
          ],
          "description": "\"extra-data\""
        },
        "path": {
          "type": "string",
          "description": "The path of a patch file that will be applied in the source dir"
        },
        "url": {
          "type": "string",
          "description": "The url to the extra data."
        },
        "mirror-urls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of alternative urls that are used if the main url fails."
        },
        "git-init": {
          "type": "boolean",
          "description": "Whether to initialise the repository as a git repository."
        },
        "md5": {
          "type": "string",
          "description": "The md5 checksum of the file, verified after download. This is optional for local files. Note that md5 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha1": {
          "type": "string",
          "description": "The sha1 checksum of the file, verified after download. This is optional for local files. Note that sha1 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha256": {
          "type": "string",
          "description": "The sha256 of the extra data."
        },
        "sha512": {
          "type": "string",
          "description": "The sha512 checksum of the file, verified after download. This is optional for local files."
        },
        "strip-components": {
          "type": "integer",
          "description": "The value of the -p argument to patch, defaults to 1."
        },
        "dest-filename": {
          "type": "string",
          "description": "Filename to use inside the source dir, default to autogen.sh."
        },
        "branch": {
          "type": "string",
          "description": "The branch to use from the git repository"
        },
        "tag": {
          "type": "string",
          "description": "The tag to use from the git repository"
        },
        "commit": {
          "type": "string",
          "description": "The commit to use from the git repository. If branch is also specified, then it is verified that the branch/tag is at this specific commit. This is a readable way to document that you're using a particular tag, but verify that it does not change."
        },
        "disable-fsckobjects": {
          "type": "boolean",
          "description": "Don't use transfer.fsckObjects=1 to mirror git repository. This may be needed for some (broken) repositories."
        },
        "disable-shallow-clone": {
          "type": "boolean",
          "description": "Don't optimize by making a shallow clone when downloading the git repo."
        },
        "revision": {
          "type": "string",
          "description": "A specific revision number to use"
        },
        "skip": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Source files to ignore in the directory."
        },
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of shell commands that will be run during source extraction"
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An list of paths to a patch files that will be applied in the source dir, in order"
        },
        "use-git": {
          "type": "boolean",
          "description": "Whether to use \"git apply\" rather than \"patch\" to apply the patch, required when the patch file contains binary diffs."
        },
        "use-git-am": {
          "type": "boolean",
          "description": "option"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Extra options to pass to the patch command."
        },
        "filename": {
          "type": "string",
          "description": "The name to use for the downloaded extra data"
        },
        "size": {
          "type": "number",
          "description": "The size of the extra data."
        },
        "installed-size": {
          "type": "string",
          "description": "The extra installed size this adds to the app (optional)."
        }
      }
    },
    "file-source": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "only-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If non-empty, only build the module on the arches listed."
        },
        "skip-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Don't build on any of the arches listed."
        },
        "dest": {
          "type": "string",
          "description": "Directory inside the source dir where this source will be extracted."
        },
        "type": {
          "type": "string",
          "enum": [
            "archive",
            "git",
            "bzr",
            "svn",
            "dir",
            "file",
            "script",
            "shell",
            "patch",
            "extra-data"
          ],
          "description": "\"extra-data\""
        },
        "path": {
          "type": "string",
          "description": "The path of a patch file that will be applied in the source dir"
        },
        "url": {
          "type": "string",
          "description": "The url to the extra data."
        },
        "mirror-urls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of alternative urls that are used if the main url fails."
        },
        "git-init": {
          "type": "boolean",
          "description": "Whether to initialise the repository as a git repository."
        },
        "md5": {
          "type": "string",
          "description": "The md5 checksum of the file, verified after download. This is optional for local files. Note that md5 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha1": {
          "type": "string",
          "description": "The sha1 checksum of the file, verified after download. This is optional for local files. Note that sha1 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha256": {
          "type": "string",
          "description": "The sha256 of the extra data."
        },
        "sha512": {
          "type": "string",
          "description": "The sha512 checksum of the file, verified after download. This is optional for local files."
        },
        "strip-components": {
          "type": "integer",
          "description": "The value of the -p argument to patch, defaults to 1."
        },
        "dest-filename": {
          "type": "string",
          "description": "Filename to use inside the source dir, default to autogen.sh."
        },
        "branch": {
          "type": "string",
          "description": "The branch to use from the git repository"
        },
        "tag": {
          "type": "string",
          "description": "The tag to use from the git repository"
        },
        "commit": {
          "type": "string",
          "description": "The commit to use from the git repository. If branch is also specified, then it is verified that the branch/tag is at this specific commit. This is a readable way to document that you're using a particular tag, but verify that it does not change."
        },
        "disable-fsckobjects": {
          "type": "boolean",
          "description": "Don't use transfer.fsckObjects=1 to mirror git repository. This may be needed for some (broken) repositories."
        },
        "disable-shallow-clone": {
          "type": "boolean",
          "description": "Don't optimize by making a shallow clone when downloading the git repo."
        },
        "revision": {
          "type": "string",
          "description": "A specific revision number to use"
        },
        "skip": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Source files to ignore in the directory."
        },
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of shell commands that will be run during source extraction"
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An list of paths to a patch files that will be applied in the source dir, in order"
        },
        "use-git": {
          "type": "boolean",
          "description": "Whether to use \"git apply\" rather than \"patch\" to apply the patch, required when the patch file contains binary diffs."
        },
        "use-git-am": {
          "type": "boolean",
          "description": "option"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Extra options to pass to the patch command."
        },
        "filename": {
          "type": "string",
          "description": "The name to use for the downloaded extra data"
        },
        "size": {
          "type": "number",
          "description": "The size of the extra data."
        },
        "installed-size": {
          "type": "string",
          "description": "The extra installed size this adds to the app (optional)."
        }
      }
    },
    "script-source": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "only-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If non-empty, only build the module on the arches listed."
        },
        "skip-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Don't build on any of the arches listed."
        },
        "dest": {
          "type": "string",
          "description": "Directory inside the source dir where this source will be extracted."
        },
        "type": {
          "type": "string",
          "enum": [
            "archive",
            "git",
            "bzr",
            "svn",
            "dir",
            "file",
            "script",
            "shell",
            "patch",
            "extra-data"
          ],
          "description": "\"extra-data\""
        },
        "path": {
          "type": "string",
          "description": "The path of a patch file that will be applied in the source dir"
        },
        "url": {
          "type": "string",
          "description": "The url to the extra data."
        },
        "mirror-urls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of alternative urls that are used if the main url fails."
        },
        "git-init": {
          "type": "boolean",
          "description": "Whether to initialise the repository as a git repository."
        },
        "md5": {
          "type": "string",
          "description": "The md5 checksum of the file, verified after download. This is optional for local files. Note that md5 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha1": {
          "type": "string",
          "description": "The sha1 checksum of the file, verified after download. This is optional for local files. Note that sha1 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha256": {
          "type": "string",
          "description": "The sha256 of the extra data."
        },
        "sha512": {
          "type": "string",
          "description": "The sha512 checksum of the file, verified after download. This is optional for local files."
        },
        "strip-components": {
          "type": "integer",
          "description": "The value of the -p argument to patch, defaults to 1."
        },
        "dest-filename": {
          "type": "string",
          "description": "Filename to use inside the source dir, default to autogen.sh."
        },
        "branch": {
          "type": "string",
          "description": "The branch to use from the git repository"
        },
        "tag": {
          "type": "string",
          "description": "The tag to use from the git repository"
        },
        "commit": {
          "type": "string",
          "description": "The commit to use from the git repository. If branch is also specified, then it is verified that the branch/tag is at this specific commit. This is a readable way to document that you're using a particular tag, but verify that it does not change."
        },
        "disable-fsckobjects": {
          "type": "boolean",
          "description": "Don't use transfer.fsckObjects=1 to mirror git repository. This may be needed for some (broken) repositories."
        },
        "disable-shallow-clone": {
          "type": "boolean",
          "description": "Don't optimize by making a shallow clone when downloading the git repo."
        },
        "revision": {
          "type": "string",
          "description": "A specific revision number to use"
        },
        "skip": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Source files to ignore in the directory."
        },
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of shell commands that will be run during source extraction"
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An list of paths to a patch files that will be applied in the source dir, in order"
        },
        "use-git": {
          "type": "boolean",
          "description": "Whether to use \"git apply\" rather than \"patch\" to apply the patch, required when the patch file contains binary diffs."
        },
        "use-git-am": {
          "type": "boolean",
          "description": "option"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Extra options to pass to the patch command."
        },
        "filename": {
          "type": "string",
          "description": "The name to use for the downloaded extra data"
        },
        "size": {
          "type": "number",
          "description": "The size of the extra data."
        },
        "installed-size": {
          "type": "string",
          "description": "The extra installed size this adds to the app (optional)."
        }
      }
    },
    "shell-source": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "only-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If non-empty, only build the module on the arches listed."
        },
        "skip-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Don't build on any of the arches listed."
        },
        "dest": {
          "type": "string",
          "description": "Directory inside the source dir where this source will be extracted."
        },
        "type": {
          "type": "string",
          "enum": [
            "archive",
            "git",
            "bzr",
            "svn",
            "dir",
            "file",
            "script",
            "shell",
            "patch",
            "extra-data"
          ],
          "description": "\"extra-data\""
        },
        "path": {
          "type": "string",
          "description": "The path of a patch file that will be applied in the source dir"
        },
        "url": {
          "type": "string",
          "description": "The url to the extra data."
        },
        "mirror-urls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of alternative urls that are used if the main url fails."
        },
        "git-init": {
          "type": "boolean",
          "description": "Whether to initialise the repository as a git repository."
        },
        "md5": {
          "type": "string",
          "description": "The md5 checksum of the file, verified after download. This is optional for local files. Note that md5 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha1": {
          "type": "string",
          "description": "The sha1 checksum of the file, verified after download. This is optional for local files. Note that sha1 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha256": {
          "type": "string",
          "description": "The sha256 of the extra data."
        },
        "sha512": {
          "type": "string",
          "description": "The sha512 checksum of the file, verified after download. This is optional for local files."
        },
        "strip-components": {
          "type": "integer",
          "description": "The value of the -p argument to patch, defaults to 1."
        },
        "dest-filename": {
          "type": "string",
          "description": "Filename to use inside the source dir, default to autogen.sh."
        },
        "branch": {
          "type": "string",
          "description": "The branch to use from the git repository"
        },
        "tag": {
          "type": "string",
          "description": "The tag to use from the git repository"
        },
        "commit": {
          "type": "string",
          "description": "The commit to use from the git repository. If branch is also specified, then it is verified that the branch/tag is at this specific commit. This is a readable way to document that you're using a particular tag, but verify that it does not change."
        },
        "disable-fsckobjects": {
          "type": "boolean",
          "description": "Don't use transfer.fsckObjects=1 to mirror git repository. This may be needed for some (broken) repositories."
        },
        "disable-shallow-clone": {
          "type": "boolean",
          "description": "Don't optimize by making a shallow clone when downloading the git repo."
        },
        "revision": {
          "type": "string",
          "description": "A specific revision number to use"
        },
        "skip": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Source files to ignore in the directory."
        },
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of shell commands that will be run during source extraction"
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An list of paths to a patch files that will be applied in the source dir, in order"
        },
        "use-git": {
          "type": "boolean",
          "description": "Whether to use \"git apply\" rather than \"patch\" to apply the patch, required when the patch file contains binary diffs."
        },
        "use-git-am": {
          "type": "boolean",
          "description": "option"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Extra options to pass to the patch command."
        },
        "filename": {
          "type": "string",
          "description": "The name to use for the downloaded extra data"
        },
        "size": {
          "type": "number",
          "description": "The size of the extra data."
        },
        "installed-size": {
          "type": "string",
          "description": "The extra installed size this adds to the app (optional)."
        }
      }
    },
    "patch-source": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "only-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If non-empty, only build the module on the arches listed."
        },
        "skip-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Don't build on any of the arches listed."
        },
        "dest": {
          "type": "string",
          "description": "Directory inside the source dir where this source will be extracted."
        },
        "type": {
          "type": "string",
          "enum": [
            "archive",
            "git",
            "bzr",
            "svn",
            "dir",
            "file",
            "script",
            "shell",
            "patch",
            "extra-data"
          ],
          "description": "\"extra-data\""
        },
        "path": {
          "type": "string",
          "description": "The path of a patch file that will be applied in the source dir"
        },
        "url": {
          "type": "string",
          "description": "The url to the extra data."
        },
        "mirror-urls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of alternative urls that are used if the main url fails."
        },
        "git-init": {
          "type": "boolean",
          "description": "Whether to initialise the repository as a git repository."
        },
        "md5": {
          "type": "string",
          "description": "The md5 checksum of the file, verified after download. This is optional for local files. Note that md5 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha1": {
          "type": "string",
          "description": "The sha1 checksum of the file, verified after download. This is optional for local files. Note that sha1 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha256": {
          "type": "string",
          "description": "The sha256 of the extra data."
        },
        "sha512": {
          "type": "string",
          "description": "The sha512 checksum of the file, verified after download. This is optional for local files."
        },
        "strip-components": {
          "type": "integer",
          "description": "The value of the -p argument to patch, defaults to 1."
        },
        "dest-filename": {
          "type": "string",
          "description": "Filename to use inside the source dir, default to autogen.sh."
        },
        "branch": {
          "type": "string",
          "description": "The branch to use from the git repository"
        },
        "tag": {
          "type": "string",
          "description": "The tag to use from the git repository"
        },
        "commit": {
          "type": "string",
          "description": "The commit to use from the git repository. If branch is also specified, then it is verified that the branch/tag is at this specific commit. This is a readable way to document that you're using a particular tag, but verify that it does not change."
        },
        "disable-fsckobjects": {
          "type": "boolean",
          "description": "Don't use transfer.fsckObjects=1 to mirror git repository. This may be needed for some (broken) repositories."
        },
        "disable-shallow-clone": {
          "type": "boolean",
          "description": "Don't optimize by making a shallow clone when downloading the git repo."
        },
        "revision": {
          "type": "string",
          "description": "A specific revision number to use"
        },
        "skip": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Source files to ignore in the directory."
        },
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of shell commands that will be run during source extraction"
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An list of paths to a patch files that will be applied in the source dir, in order"
        },
        "use-git": {
          "type": "boolean",
          "description": "Whether to use \"git apply\" rather than \"patch\" to apply the patch, required when the patch file contains binary diffs."
        },
        "use-git-am": {
          "type": "boolean",
          "description": "option"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Extra options to pass to the patch command."
        },
        "filename": {
          "type": "string",
          "description": "The name to use for the downloaded extra data"
        },
        "size": {
          "type": "number",
          "description": "The size of the extra data."
        },
        "installed-size": {
          "type": "string",
          "description": "The extra installed size this adds to the app (optional)."
        }
      }
    },
    "extra-data-source": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "only-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If non-empty, only build the module on the arches listed."
        },
        "skip-arches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Don't build on any of the arches listed."
        },
        "dest": {
          "type": "string",
          "description": "Directory inside the source dir where this source will be extracted."
        },
        "type": {
          "type": "string",
          "enum": [
            "archive",
            "git",
            "bzr",
            "svn",
            "dir",
            "file",
            "script",
            "shell",
            "patch",
            "extra-data"
          ],
          "description": "\"extra-data\""
        },
        "path": {
          "type": "string",
          "description": "The path of a patch file that will be applied in the source dir"
        },
        "url": {
          "type": "string",
          "description": "The url to the extra data."
        },
        "mirror-urls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of alternative urls that are used if the main url fails."
        },
        "git-init": {
          "type": "boolean",
          "description": "Whether to initialise the repository as a git repository."
        },
        "md5": {
          "type": "string",
          "description": "The md5 checksum of the file, verified after download. This is optional for local files. Note that md5 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha1": {
          "type": "string",
          "description": "The sha1 checksum of the file, verified after download. This is optional for local files. Note that sha1 is no longer considered a safe checksum, we recommend you use at least sha256."
        },
        "sha256": {
          "type": "string",
          "description": "The sha256 of the extra data."
        },
        "sha512": {
          "type": "string",
          "description": "The sha512 checksum of the file, verified after download. This is optional for local files."
        },
        "strip-components": {
          "type": "integer",
          "description": "The value of the -p argument to patch, defaults to 1."
        },
        "dest-filename": {
          "type": "string",
          "description": "Filename to use inside the source dir, default to autogen.sh."
        },
        "branch": {
          "type": "string",
          "description": "The branch to use from the git repository"
        },
        "tag": {
          "type": "string",
          "description": "The tag to use from the git repository"
        },
        "commit": {
          "type": "string",
          "description": "The commit to use from the git repository. If branch is also specified, then it is verified that the branch/tag is at this specific commit. This is a readable way to document that you're using a particular tag, but verify that it does not change."
        },
        "disable-fsckobjects": {
          "type": "boolean",
          "description": "Don't use transfer.fsckObjects=1 to mirror git repository. This may be needed for some (broken) repositories."
        },
        "disable-shallow-clone": {
          "type": "boolean",
          "description": "Don't optimize by making a shallow clone when downloading the git repo."
        },
        "revision": {
          "type": "string",
          "description": "A specific revision number to use"
        },
        "skip": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Source files to ignore in the directory."
        },
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of shell commands that will be run during source extraction"
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An list of paths to a patch files that will be applied in the source dir, in order"
        },
        "use-git": {
          "type": "boolean",
          "description": "Whether to use \"git apply\" rather than \"patch\" to apply the patch, required when the patch file contains binary diffs."
        },
        "use-git-am": {
          "type": "boolean",
          "description": "option"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Extra options to pass to the patch command."
        },
        "filename": {
          "type": "string",
          "description": "The name to use for the downloaded extra data"
        },
        "size": {
          "type": "number",
          "description": "The size of the extra data."
        },
        "installed-size": {
          "type": "string",
          "description": "The extra installed size this adds to the app (optional)."
        }
      }
    }
  },
  "type": "object",
  "oneOf": [
    {
      "required": [
        "app-id"
      ]
    },
    {
      "required": [
        "id"
      ]
    }
  ],
  "properties": {
    "id": {
      "type": "string",
      "description": "A string defining the application id."
    },
    "app-id": {
      "type": "string",
      "description": "A string defining the application id."
    },
    "branch": {
      "type": "string",
      "description": "The branch to use when exporting the application. If this is unset the defaults come from the default-branch option. This key overrides both the default-branch key, and the --default-branch commandline option. Unless you need a very specific branchname (like for a runtime or an extension) it is recommended to use the default-branch key instead, because you can then override the default using --default-branch when building for instance a test build."
    },
    "default-branch": {
      "type": "string",
      "description": "The default branch to use when exporting the application. Defaults to master. This key can be overriden by the --default-branch commandline option."
    },
    "collection-id": {
      "type": "string",
      "description": "The collection ID of the repository, defaults to being unset. Setting a globally unique collection ID allows the apps in the repository to be shared over peer to peer systems without needing further configuration. If building in an existing repository, the collection ID must match the existing configured collection ID for that repository."
    },
    "extension-tag": {
      "type": "string",
      "description": "If building an extension, the tag for the extension point to use. Since flatpak 0.11.4 a runtime may define multiple locations for the same extension point with the intention that different branches for the extension are mounted at each location. When building an extension it is necessary to know what extension point to install the extension to. This option resolves any ambiguity in which extension point to choose. If not specified, the default choice is to install into either the only location for the extension point or into the location for the untagged extension point. If there are multiple locations for the same extension point defined with different tags then an error will occur."
    },
    "runtime": {
      "type": "string",
      "description": "The name of the runtime that the application uses."
    },
    "runtime-version": {
      "type": "string",
      "description": "The version of the runtime that the application uses, defaults to master."
    },
    "sdk": {
      "type": "string",
      "description": "The name of the development runtime that the application builds with."
    },
    "var": {
      "type": "string",
      "description": "Initialize the (otherwise empty) writable /var in the build with a copy of this runtime."
    },
    "metadata": {
      "type": "string",
      "description": "Use this file as the base metadata file when finishing."
    },
    "command": {
      "type": "string",
      "description": "The filename or path to the main binary of the application. Note that this is really just a single file, not a commandline. If you want to pass arguments, install a shell script wrapper and use that as the command. Also note that the command is used when the application is run via , and does not affect what gets executed when the application is run in other ways, e.g. via the desktop file or D-Bus activation."
    },
    "build-runtime": {
      "type": "boolean",
      "description": "Build a new runtime instead of an application."
    },
    "build-extension": {
      "type": "boolean",
      "description": "Build an extension."
    },
    "separate-locales": {
      "type": "boolean",
      "description": "Separate out locale files and translations to an extension runtime. Defaults to true."
    },
    "id-platform": {
      "type": "string",
      "description": "When building a runtime sdk, also create a platform based on it with this id."
    },
    "metadata-platform": {
      "type": "string",
      "description": "The metadata file to use for the platform we create."
    },
    "writable-sdk": {
      "type": "boolean",
      "description": "If true, use a writable copy of the sdk for /usr. Defaults to true if build-runtime is specified."
    },
    "appstream-compose": {
      "type": "boolean",
      "description": "Run appstream-compose during cleanup phase. Defaults to true."
    },
    "sdk-extensions": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Install these extra sdk extensions in /usr."
    },
    "platform-extensions": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Install these extra sdk extensions when creating the platform."
    },
    "base": {
      "type": "string",
      "description": "Start with the files from the specified application. This can be used to create applications that extend another application."
    },
    "base-version": {
      "type": "string",
      "description": "Use this specific version of the application specified in base. If unspecified, this uses the value specified in branch"
    },
    "base-extensions": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Install these extra extensions from the base application when initializing the application directory."
    },
    "inherit-extensions": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Inherit these extra extensions points from the base application or sdk when finishing the build."
    },
    "inherit-sdk-extensions": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Inherit these extra extensions points from the base application or sdk when finishing the build, but do not inherit them into the platform."
    },
    "tags": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Add these tags to the metadata file."
    },
    "build-options": {
      "$ref": "#/definitions/build-options",
      "description": "Object specifying the build environment. See below for details."
    },
    "modules": {
      "type": "array",
      "items": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "$ref": "#/definitions/module"
          }
        ]
      },
      "description": "An array of objects specifying the modules to be built in order. String members in the array are interpreted as the name of a separate json or yaml file that contains a module. See below for details."
    },
    "add-extensions": {
      "type": "object",
      "patternProperties": {
        ".+": {
          "$ref": "#/definitions/extension"
        }
      },
      "additionalProperties": false,
      "description": "This is a dictionary of extension objects. The key is the name of the extension. See below for details."
    },
    "add-build-extensions": {
      "$ref": "#/properties/add-extensions",
      "description": "This is a dictionary of extension objects similar to add-extensions. The main difference is that the extensions are added early and are available for use during the build."
    },
    "cleanup": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "An array of file patterns that should be removed at the end. Patterns starting with / are taken to be full pathnames (without the /app prefix), otherwise they just match the basename."
    },
    "cleanup-commands": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "An array of commandlines that are run during the cleanup phase."
    },
    "cleanup-platform": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Extra files to clean up in the platform."
    },
    "cleanup-platform-commands": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "An array of commandlines that are run during the cleanup phase of the platform."
    },
    "prepare-platform-commands": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "An array of commandlines that are run after importing the base platform, but before applying the new files from the sdk. This is a good place to e.g. delete things from the base that may conflict with the files added in the sdk."
    },
    "finish-args": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "command"
    },
    "rename-desktop-file": {
      "type": "string",
      "description": "Any desktop file with this name will be renamed to a name based on id during the cleanup phase."
    },
    "rename-appdata-file": {
      "type": "string",
      "description": "Any appdata file with this name will be renamed to a name based on id during the cleanup phase."
    },
    "rename-icon": {
      "type": "string",
      "description": "Any icon with this name will be renamed to a name based on id during the cleanup phase. Note that this is the icon name, not the full filenames, so it should not include a filename extension."
    },
    "appdata-license": {
      "type": "string",
      "description": "Replace the appdata project_license field with this string. This is useful as the upstream license is typically only about the application itself, whereas the bundled app can contain other licenses too."
    },
    "copy-icon": {
      "type": "boolean",
      "description": "If rename-icon is set, keep a copy of the old icon file."
    },
    "desktop-file-name-prefix": {
      "type": "string",
      "description": "This string will be prefixed to the Name key in the main application desktop file."
    },
    "desktop-file-name-suffix": {
      "type": "string",
      "description": "This string will be suffixed to the Name key in the main application desktop file."
    }
  }
}